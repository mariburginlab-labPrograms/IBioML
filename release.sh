#!/bin/bash

set -e  # si algo falla, se corta

# Par√°metros
REPO="testpypi"  # o "testpypi" si quer√©s probar
VERSION=$1   # pas√°s la versi√≥n como argumento (ej: ./release.sh 0.1.4)

if [ -z "$VERSION" ]; then
  echo "‚ö†Ô∏è  Ten√©s que pasar una versi√≥n. Ej: ./release.sh 0.1.4"
  exit 1
fi

echo "üì¶ Actualizando a la versi√≥n $VERSION"

# Actualiza la versi√≥n en pyproject.toml o setup.py
if [ -f "pyproject.toml" ]; then
  sed -i '' "s/^version = .*/version = \"$VERSION\"/" pyproject.toml
elif [ -f "setup.py" ]; then
  sed -i '' "s/version=.*,/version=\"$VERSION\",/" setup.py
else
  echo "‚ùå No encontr√© ni setup.py ni pyproject.toml"
  exit 1
fi

# Limpia versiones viejas
rm -rf dist/ build/ *.egg-info/

# Build
echo "‚öôÔ∏è  Generando paquete..."
python3 -m build

# Upload
echo "‚òÅÔ∏è  Subiendo a $REPO"
if [ "$REPO" = "testpypi" ]; then
  twine upload --repository testpypi dist/*
else
  twine upload dist/*
fi

# (Opcional) Git
echo "üì§ Haciendo commit y push"
git add .
git commit -m "Release v$VERSION"
git tag "v$VERSION"
git push && git push --tags

echo "‚úÖ ¬°Listo! Versi√≥n $VERSION subida a $REPO"
